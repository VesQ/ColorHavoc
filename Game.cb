//********************************************************************************
// Game.cb
//
// Varsinaisen pelin mekaniikka
//********************************************************************************



//================================================================================
// Pelin p‰‰silmukka
//================================================================================
Function StartGame()
    Repeat
        // Piirret‰‰n taustakuva pelialueelle
        DrawImage GUIIMAGES( GUI_GAMEAREA ), BORDERSIZE, BORDERSIZE
    
        ClsColor 64,0,0
        EditGameMap()
        DrawGameMap()
        DrawScreen
    Until EscapeKey() Or KeyHit(cbKeyQ)
    
    Return True
    
EndFunction

//================================================================================
// Raiteiden piirto karttaan.
//================================================================================
Function EditGameMap()
    // Tarkistetaan hiirell‰ piirto
    blockType = checkRailDraws()
    
    // Jos tapahtui muutos, niin poistetaan muokatun tilen toisarvoinen raide
    // ja asetetaan nykyinen raide toisarvoiseksi. Uusi raite ensiarvoiseksi.
    // MUTTA vain jos uusi block ei ole sama kuin jo nyt p‰‰ll‰ oleva.
    If blockType<>False Then
        If blockType <> RAILS( gEditedTileX, gEditedTileY, 0 ) Then
            // Ei muuteta palasia, jos edellinen palanen on jo x-risteys ja uusi palanen olisi suora.
            If Not ( ( blockType = TR_VERTICAL Or blockType = TR_HORIZONTAL ) And RAILS( gEditedTileX, gEditedTileY, 1 ) = TR_XCROSS )
                // Tarkistetaan, tekeekˆ uusi raide vanhan kanssa x-risteyksen.
                If blockType = TR_VERTICAL And RAILS( gEditedTileX, gEditedTileY, 0 ) = TR_HORIZONTAL Then
                    RAILS( gEditedTileX, gEditedTileY, 0 ) = TR_XCROSS
                    RAILS( gEditedTileX, gEditedTileY, 1 ) = TR_XCROSS
                ElseIf blockType = TR_HORIZONTAL And RAILS( gEditedTileX, gEditedTileY, 0 ) = TR_VERTICAL Then
                    RAILS( gEditedTileX, gEditedTileY, 0 ) = TR_XCROSS
                    RAILS( gEditedTileX, gEditedTileY, 1 ) = TR_XCROSS
                Else
                    RAILS( gEditedTileX, gEditedTileY, 1 ) = RAILS( gEditedTileX, gEditedTileY, 0 )
                    RAILS( gEditedTileX, gEditedTileY, 0 ) = blockType
                EndIf
            EndIf
        EndIf
    EndIf
EndFunction


//================================================================================
// Kartan piirto
//================================================================================
Function DrawGameMap()

    // Pit‰‰ tehd‰ tuplaklikkaustarkistus ennen for-looppia
    If MouseDoubleClick() Then doubleclicked = True Else doubleclicked = False
    
    For x=0 To MAPSIZE-1
        For y=0 To MAPSIZE-1
            If TileType(x,y) = TILE_TRACK And MouseOverTile(x,y) Then
                If doubleclicked Then
                    // Jos tuplaklikattiin ja hiiri on juuri t‰m‰n laatan p‰‰ll‰,
                    // niin vaihdetaan p‰‰ll‰ ja alla olevat laatat kesken‰‰n.
                    // Tarkistetaan kuitenkin ett‰ paikalla on kaksi laattaa ylip‰‰ns‰.
                    If RAILS(x,y,0)<>TILE_EMPTY And RAILS(x,y,1)<>TILE_EMPTY And RAILS(x,y,0)<>RAILS(x,y,1) Then
                        tmp = RAILS(x,y,0)
                        RAILS(x,y,0) = RAILS(x,y,1)
                        RAILS(x,y,1) = tmp
                    EndIf
                ElseIf MouseHit(2) Then
                    // Hiiren kakkospainiketta (yleens‰ oikeata) painiketta painettiin.
                    // Poistetaan hiiren alla oleva tile.
                    DeleteTrack(x,y)
                EndIf
            EndIf
            
            // Piirret‰‰n palanen n‰ytˆlle
            DrawTrack(x,y)
        Next y
    Next x
EndFunction 


//================================================================================
// Hieman monimutkainen funktio uuden raiteen selvitt‰miseksi. Uuden palasen
// koordinaatit tallennetaan muuttujiin gEditedTileX ja gEditTileY.
// Funktio tarvitsee avukseen useita globaaleia, koska se on v‰h‰n purkkainen.
// gCNT-alkuiset globaalit ovat funktion sis‰iseen k‰yttˆˆn tarkoitetut.
// Funktiota pit‰‰ kutsua joka loopin kierros.
// -> Funktio palauttaa uuden palasen vakion arvon.
//================================================================================
Global gCNTtileX, gCNTtileY, gCNTstartTileX, gCNTstartTileY
Global gCNTstartX, gCNTstartY, gCNTendX, gCNTendY
Global gEditedTileX, gEditedTileY

Function CheckRailDraws()
    
    gCNTtileX = (MouseX()-BORDERSIZE)/64
    gCNTtileY = (MouseY()-BORDERSIZE)/64
    
    gCNTtileX = Min(Max(gCNTtileX,0),MAPSIZE-1)
    gCNTtileY = Min(Max(gCNTtileY,0),MAPSIZE-1)
    
    If MouseDown(1)
        If gCNTstartTileX=-1 Or gCNTstartTileY=-1 Then gCNTstartTileX=gCNTtileX : gCNTstartTileY=gCNTtileY
        For x2=Max(Min(RoundDown(MouseX()/64)-1,10),0) To Max(Min(RoundDown(MouseX()/64)+1,10),0)
            For y2=Max(Min(RoundDown(MouseY()/64)-1,10),0) To Max(Min(RoundDown(MouseY()/64)+1,10),0)
                For i=0 To 1
                    If GLUEPOINTS(x2,y2,i,0) >= BORDERSIZE And GLUEPOINTS(x2,y2,i,1) >= BORDERSIZE Then
                        If Distance(MouseX(),MouseY(),GLUEPOINTS(x2,y2,i,0),GLUEPOINTS(x2,y2,i,1))<TILESIZE/4 Then 
                            If gCNTstartX=-1 Then
                                gCNTstartX=GLUEPOINTS(x2,y2,i,0)
                                gCNTstartY=GLUEPOINTS(x2,y2,i,1)
                            ElseIf gCNTendX=-1 Or gCNTendX=gCNTstartX
                                gCNTendX=GLUEPOINTS(x2,y2,i,0)
                                gCNTendY=GLUEPOINTS(x2,y2,i,1)
                            EndIf
                        EndIf
                    EndIf
                Next i
            Next y2
        Next x2
        
        If gCNTtileX<>gCNTstartTileX Or gCNTtileY<>gCNTstartTileY Then
            gCNTstartX=-1 : gCNTstartY=-1 : gCNTendX=-1 : gCNTendY=-1 : gCNTstartTileX=-1 : gCNTstartTileY=-1
        EndIf
        
        If gCNTstartX<>-1 And gCNTendX<>-1 Then
            'Color cbYellow
            'Line gCNTstartX,gCNTstartY,gCNTendX,gCNTendY
            angle = GetAngle( gCNTstartX, gCNTstartY, gCNTendX, gCNTendY )
            blockCheck = gCNTstartX - gCNTstartTileX*64 - BORDERSIZE
            If ( gCNTstartX <> gCNTendX ) Or ( gCNTstartY <> gCNTendY ) Then
                block = TR_EMPTY
                If gCNTstartX = gCNTendX Then
                    block = TR_VERTICAL
                ElseIf gCNTstartY = gCNTendY Then
                    block = TR_HORIZONTAL
                ElseIf angle=315 Then
                    If blockCheck=0 Then
                        block = TR_BOTTOMLEFT
                    Else
                        block = TR_TOPRIGHT
                    EndIf
                ElseIf angle=135 Then
                    If blockCheck=32 Then
                        block = TR_BOTTOMLEFT
                    Else
                        block = TR_TOPRIGHT
                    EndIf
                ElseIf angle=225 Then
                    If blockCheck=32 Then
                        block = TR_TOPLEFT
                    Else
                        block = TR_BOTTOMRIGHT
                    EndIf
                ElseIf angle=45 Then
                    If blockCheck=0 Then
                        block = TR_TOPLEFT
                    Else
                        block = TR_BOTTOMRIGHT
                    EndIf
                EndIf
            EndIf
        EndIf
        
    Else 
        gCNTstartX=-1 : gCNTstartY=-1 : gCNTendX=-1 : gCNTendY=-1 : gCNTstartTileX=-1 : gCNTstartTileY=-1
    EndIf
    
    If block<>TR_EMPTY Then
        gEditedTileX = gCNTtileX
        gEditedTileY = gCNTtileY
        Return block
    Else
        Return False
    EndIf
    
EndFunction 