//********************************************************************************
// Game.cb
//
// Tileihin (raiteisiin) liittyvät funktiot ja muu mekaniikka
//********************************************************************************

// Taulukko, joka sisältää tiedot kaikista mahdollisista pisteistä joihin tarrautua.
// (x,y,0,0) = pystyriveillä sijaitsevan pisteen x-koordinaatti
// (x,y,0,1) = pystyriveillä sijaitsevan pisteen y-koordinaatti
// (x,y,1,0/1) = vaakariveillä sijaitsevien pisteiden koordinaatit
Dim GLUEPOINTS(MAPSIZE,MAPSIZE,1,1)

// Laitetaan GLUEPOINTS-taulukkoon oikeat arvot jo käynnistyksessä.
For x2=0 To MAPSIZE
    For y2=0 To MAPSIZE
        GLUEPOINTS(x2,y2,0,0)=x2*TILESIZE + BORDERSIZE
        GLUEPOINTS(x2,y2,0,1)=y2*TILESIZE - TILESIZE/2 + BORDERSIZE
        
        GLUEPOINTS(x2,y2,1,0)=x2*TILESIZE - TILESIZE/2 + BORDERSIZE
        GLUEPOINTS(x2,y2,1,1)=y2*TILESIZE + BORDERSIZE
    Next y2
Next x2
x2=0 : y2=0



//================================================================================
// Yksittäisen laatan piirto
//================================================================================
Function DrawTile( x, y )
    // Piirretään kuvat. Ovela logiikka, jolla tarkistetaan,
    // ovatko molemmat kuvat päällepiirrettäviä (eli vastakkaiset
    // käännökset). If-lause on vähän turhan pitkä :/
    bothon = False
    If ( MAP(x,y,0) = TOPLEFT And MAP(x,y,1) = BOTTOMRIGHT ) Or ( MAP(x,y,0) = TOPRIGHT And MAP(x,y,1) = BOTTOMLEFT ) Or ( MAP(x,y,1) = TOPLEFT And MAP(x,y,0) = BOTTOMRIGHT ) Or ( MAP(x,y,1) = TOPRIGHT And MAP(x,y,0) = BOTTOMLEFT ) Then
        bothon = True
    EndIf

    
    DrawImage RAILS( MAP(x,y,1),Not bothon ), x*TILESIZE+BORDERSIZE, y*TILESIZE+BORDERSIZE
    DrawImage RAILS( MAP(x,y,0),0 ), x*TILESIZE+BORDERSIZE, y*TILESIZE+BORDERSIZE
EndFunction

//================================================================================
// Yksittäisen laatan poisto. TODO: joku hieno poistoanimaatio.
//================================================================================
Function DeleteTile( x, y )
    MAP( x, y, 0 ) = EMPTY
    MAP( x, y, 1 ) = EMPTY
    
    Return True
EndFunction

//================================================================================
// Hyvin monimutkainen funktio uuden palasen selvittämiseksi. Uuden palasen
// koordinaatit tallennetaan muuttujiin gEditedTileX ja gEditTileY.
// Funktio tarvitsee avukseen useita globaaleia, koska se on vähän purkkainen.
// gCNT-alkuiset globaalit ovat funktion sisäiseen käyttöön tarkoitetut.
// Funktiota pitää kutsua joka loopin kierros.
// -> Funktio palauttaa uuden palasen vakion arvon.
//================================================================================
Global gCNTtileX, gCNTtileY, gCNTstartTileX, gCNTstartTileY
Global gCNTstartX, gCNTstartY, gCNTendX, gCNTendY
Global gEditedTileX, gEditedTileY

Function CheckTileEdits()
    gCNTtileX = (MouseX()-BORDERSIZE)/64
    gCNTtileY = (MouseY()-BORDERSIZE)/64
    
    gCNTtileX = Min(Max(gCNTtileX,0),MAPSIZE-1)
    gCNTtileY = Min(Max(gCNTtileY,0),MAPSIZE-1)
    
    If MouseDown(1)
        If gCNTstartTileX=-1 Or gCNTstartTileY=-1 Then gCNTstartTileX=gCNTtileX : gCNTstartTileY=gCNTtileY
        For x2=Max(Min(RoundDown(MouseX()/64)-1,10),0) To Max(Min(RoundDown(MouseX()/64)+1,10),0)
            For y2=Max(Min(RoundDown(MouseY()/64)-1,10),0) To Max(Min(RoundDown(MouseY()/64)+1,10),0)
                For i=0 To 1
                    If GLUEPOINTS(x2,y2,i,0) >= BORDERSIZE And GLUEPOINTS(x2,y2,i,1) >= BORDERSIZE Then
                        If Distance(MouseX(),MouseY(),GLUEPOINTS(x2,y2,i,0),GLUEPOINTS(x2,y2,i,1))<TILESIZE/4 Then 
                            If gCNTstartX=-1 Then
                                gCNTstartX=GLUEPOINTS(x2,y2,i,0)
                                gCNTstartY=GLUEPOINTS(x2,y2,i,1)
                            ElseIf gCNTendX=-1 Or gCNTendX=gCNTstartX
                                gCNTendX=GLUEPOINTS(x2,y2,i,0)
                                gCNTendY=GLUEPOINTS(x2,y2,i,1)
                            EndIf
                        EndIf
                    EndIf
                Next i
            Next y2
        Next x2
        
        If gCNTtileX<>gCNTstartTileX Or gCNTtileY<>gCNTstartTileY Then
            gCNTstartX=-1 : gCNTstartY=-1 : gCNTendX=-1 : gCNTendY=-1 : gCNTstartTileX=-1 : gCNTstartTileY=-1
        EndIf
        
        If gCNTstartX<>-1 And gCNTendX<>-1 Then
            'Color cbYellow
            'Line gCNTstartX,gCNTstartY,gCNTendX,gCNTendY
            angle = GetAngle( gCNTstartX, gCNTstartY, gCNTendX, gCNTendY )
            blockCheck = gCNTstartX - gCNTstartTileX*64 - BORDERSIZE
            If ( gCNTstartX <> gCNTendX ) Or ( gCNTstartY <> gCNTendY ) Then
                block = EMPTY
                If gCNTstartX = gCNTendX Then
                    block = VERTICAL
                ElseIf gCNTstartY = gCNTendY Then
                    block = HORIZONTAL
                ElseIf angle=315 Then
                    If blockCheck=0 Then
                        block = BOTTOMLEFT
                    Else
                        block = TOPRIGHT
                    EndIf
                ElseIf angle=135 Then
                    If blockCheck=32 Then
                        block = BOTTOMLEFT
                    Else
                        block = TOPRIGHT
                    EndIf
                ElseIf angle=225 Then
                    If blockCheck=32 Then
                        block = TOPLEFT
                    Else
                        block = BOTTOMRIGHT
                    EndIf
                ElseIf angle=45 Then
                    If blockCheck=0 Then
                        block = TOPLEFT
                    Else
                        block = BOTTOMRIGHT
                    EndIf
                EndIf
            EndIf
        EndIf
        
    Else 
        gCNTstartX=-1 : gCNTstartY=-1 : gCNTendX=-1 : gCNTendY=-1 : gCNTstartTileX=-1 : gCNTstartTileY=-1
    EndIf
    
    If block<>EMPTY Then
        gEditedTileX = gCNTtileX
        gEditedTileY = gCNTtileY
        Return block
    Else
        Return False
    EndIf
EndFunction 